// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Permission {
  id   String @id @default(uuid())
  name String
  code String @unique
  is_deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  created_by String
  updated_by String
}


model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
  is_deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  created_by String
  updated_by String
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  is_deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  created_by String
  updated_by String
}

model Post {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  title      String
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  categories CategoriesOnPosts[]
  is_deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  created_by String
  updated_by String
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]
  is_deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  created_by String
  updated_by String
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String
  @@id([postId, categoryId])
}

// enum ERole {
//   USER
//   ADMIN
//   CLIENT
// }

// enum EPermission {
//   READ
//   WRITE
//   EDIT
//   DELETE
// }